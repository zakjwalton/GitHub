
EGR 326 - Final Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  00000e7a  00000f2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e7a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  0080013e  0080013e  00000f6c  2**0
                  ALLOC
  3 .eeprom       00000003  00810000  00810000  00000f6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000060  00000000  00000000  00000f6f  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  00000fcf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002172  00000000  00000000  000011df  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ef  00000000  00000000  00003351  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aa3  00000000  00000000  00003b40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005dc  00000000  00000000  000045e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b9  00000000  00000000  00004bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001641  00000000  00000000  00005379  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  000069ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 33 01 	jmp	0x266	; 0x266 <__ctors_end>
   4:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
   8:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
   c:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  10:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  14:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  18:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  1c:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  20:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  24:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  28:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  2c:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  30:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  34:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  38:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__vector_14>
  3c:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  40:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  44:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  48:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  4c:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  50:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  54:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  58:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  5c:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  60:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>
  64:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	3e 41       	sbci	r19, 0x1E	; 30
  6a:	41 41       	sbci	r20, 0x11	; 17
  6c:	3e 00       	.word	0x003e	; ????
  6e:	42 7f       	andi	r20, 0xF2	; 242
  70:	40 00       	.word	0x0040	; ????
  72:	42 61       	ori	r20, 0x12	; 18
  74:	51 49       	sbci	r21, 0x91	; 145
  76:	46 21       	and	r20, r6
  78:	41 45       	sbci	r20, 0x51	; 81
  7a:	4b 31       	cpi	r20, 0x1B	; 27
  7c:	18 14       	cp	r1, r8
  7e:	12 7f       	andi	r17, 0xF2	; 242
  80:	10 27       	eor	r17, r16
  82:	45 45       	sbci	r20, 0x55	; 85
  84:	45 39       	cpi	r20, 0x95	; 149
  86:	3c 4a       	sbci	r19, 0xAC	; 172
  88:	49 49       	sbci	r20, 0x99	; 153
  8a:	30 01       	movw	r6, r0
  8c:	71 09       	sbc	r23, r1
  8e:	05 03       	mulsu	r16, r21
  90:	36 49       	sbci	r19, 0x96	; 150
  92:	49 49       	sbci	r20, 0x99	; 153
  94:	36 06       	cpc	r3, r22
  96:	49 49       	sbci	r20, 0x99	; 153
  98:	29 1e       	adc	r2, r25

0000009a <smallFont>:
  9a:	00 00 00 00 00 00 00 2f 00 00 00 07 00 07 00 14     ......./........
  aa:	7f 14 7f 14 24 2a 7f 2a 12 c4 c8 10 26 46 36 49     ....$*.*....&F6I
  ba:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  ca:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 00 50 30     ....>....>....P0
  da:	00 10 10 10 10 10 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  ea:	3e 41 41 41 3e 00 42 7f 40 00 42 61 51 49 46 21     >AAA>.B.@.BaQIF!
  fa:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
 10a:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 11a:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
 12a:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 13a:	32 49 59 51 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IYQ>~...~.III6>
 14a:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 15a:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 16a:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 17a:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 18a:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 19a:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 1aa:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 1ba:	08 07 61 51 49 45 43 00 7f 41 41 00 55 2a 55 2a     ..aQIEC..AA.U*U*
 1ca:	55 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40     U.AA.......@@@@@
 1da:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1ea:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1fa:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 20a:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 21a:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 22a:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 23a:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 24a:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 25a:	50 3c 44 64 54 4c 44 00 06 09 09 06                 P<DdTLD.....

00000266 <__ctors_end>:
 266:	11 24       	eor	r1, r1
 268:	1f be       	out	0x3f, r1	; 63
 26a:	cf ef       	ldi	r28, 0xFF	; 255
 26c:	d8 e0       	ldi	r29, 0x08	; 8
 26e:	de bf       	out	0x3e, r29	; 62
 270:	cd bf       	out	0x3d, r28	; 61

00000272 <__do_copy_data>:
 272:	11 e0       	ldi	r17, 0x01	; 1
 274:	a0 e0       	ldi	r26, 0x00	; 0
 276:	b1 e0       	ldi	r27, 0x01	; 1
 278:	ea e7       	ldi	r30, 0x7A	; 122
 27a:	fe e0       	ldi	r31, 0x0E	; 14
 27c:	02 c0       	rjmp	.+4      	; 0x282 <__do_copy_data+0x10>
 27e:	05 90       	lpm	r0, Z+
 280:	0d 92       	st	X+, r0
 282:	ae 33       	cpi	r26, 0x3E	; 62
 284:	b1 07       	cpc	r27, r17
 286:	d9 f7       	brne	.-10     	; 0x27e <__do_copy_data+0xc>

00000288 <__do_clear_bss>:
 288:	21 e0       	ldi	r18, 0x01	; 1
 28a:	ae e3       	ldi	r26, 0x3E	; 62
 28c:	b1 e0       	ldi	r27, 0x01	; 1
 28e:	01 c0       	rjmp	.+2      	; 0x292 <.do_clear_bss_start>

00000290 <.do_clear_bss_loop>:
 290:	1d 92       	st	X+, r1

00000292 <.do_clear_bss_start>:
 292:	ac 35       	cpi	r26, 0x5C	; 92
 294:	b2 07       	cpc	r27, r18
 296:	e1 f7       	brne	.-8      	; 0x290 <.do_clear_bss_loop>
 298:	0e 94 2f 02 	call	0x45e	; 0x45e <main>
 29c:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <_exit>

000002a0 <__bad_interrupt>:
 2a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002a4 <BUTTON_init>:
// Setting data direction for buttons as inputs (already set to zero)

// Setting pins that buttons are attached to as input capture pins (generates an input when any of the three pins are pressed)

// Enabling internal pull-up resistor on pins attached to buttons
BUTTON_1_PORT |= _BV(BUTTON_1_PIN);     
 2a4:	30 9a       	sbi	0x06, 0	; 6
BUTTON_2_PORT |= _BV(BUTTON_2_PIN);
 2a6:	31 9a       	sbi	0x06, 1	; 6
BUTTON_3_PORT |= _BV(BUTTON_3_PIN);
 2a8:	32 9a       	sbi	0x06, 2	; 6
 2aa:	08 95       	ret

000002ac <Update_timeout>:
uint8_t EEMEM alarm_AM_PM;

int Update_timeout(void)
{
	int timeout;
	timeout = times.second + 15;
 2ac:	20 91 4a 01 	lds	r18, 0x014A
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	c9 01       	movw	r24, r18
 2b4:	0f 96       	adiw	r24, 0x0f	; 15
	if(timeout > 60)
 2b6:	8d 33       	cpi	r24, 0x3D	; 61
 2b8:	91 05       	cpc	r25, r1
 2ba:	0c f0       	brlt	.+2      	; 0x2be <Update_timeout+0x12>
	{
		timeout = timeout - 60;
 2bc:	cc 97       	sbiw	r24, 0x3c	; 60
	}
	return(timeout);
}
 2be:	08 95       	ret

000002c0 <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
 2c0:	1f 92       	push	r1
 2c2:	0f 92       	push	r0
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	0f 92       	push	r0
 2c8:	11 24       	eor	r1, r1
 2ca:	2f 93       	push	r18
 2cc:	3f 93       	push	r19
 2ce:	4f 93       	push	r20
 2d0:	5f 93       	push	r21
 2d2:	8f 93       	push	r24
 2d4:	9f 93       	push	r25
	static int count;
	static int bpressed = 0;
	bool button1Raw = (PINC & _BV(BUTTON_1)) == 0;
 2d6:	96 b1       	in	r25, 0x06	; 6
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	98 27       	eor	r25, r24
	bool button2Raw = (PINC & _BV(BUTTON_2)) == 0;
 2dc:	26 b1       	in	r18, 0x06	; 6
 2de:	26 95       	lsr	r18
 2e0:	21 70       	andi	r18, 0x01	; 1
 2e2:	28 27       	eor	r18, r24
	bool button3Raw = (PINC & _BV(BUTTON_3)) == 0;
 2e4:	36 b1       	in	r19, 0x06	; 6
 2e6:	32 fb       	bst	r19, 2
 2e8:	33 27       	eor	r19, r19
 2ea:	30 f9       	bld	r19, 0
 2ec:	38 27       	eor	r19, r24
	
	if(button1Raw){
 2ee:	49 2f       	mov	r20, r25
 2f0:	41 70       	andi	r20, 0x01	; 1
 2f2:	90 ff       	sbrs	r25, 0
 2f4:	1c c0       	rjmp	.+56     	; 0x32e <__vector_14+0x6e>
		count++;
 2f6:	80 91 40 01 	lds	r24, 0x0140
 2fa:	90 91 41 01 	lds	r25, 0x0141
 2fe:	01 96       	adiw	r24, 0x01	; 1
 300:	90 93 41 01 	sts	0x0141, r25
 304:	80 93 40 01 	sts	0x0140, r24
		if(count == 50){
 308:	82 33       	cpi	r24, 0x32	; 50
 30a:	91 05       	cpc	r25, r1
 30c:	39 f4       	brne	.+14     	; 0x31c <__vector_14+0x5c>
			bpressed = B1;
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	90 93 3f 01 	sts	0x013F, r25
 316:	80 93 3e 01 	sts	0x013E, r24
 31a:	09 c0       	rjmp	.+18     	; 0x32e <__vector_14+0x6e>
		}
		if(count == 700){
 31c:	8c 3b       	cpi	r24, 0xBC	; 188
 31e:	92 40       	sbci	r25, 0x02	; 2
 320:	31 f4       	brne	.+12     	; 0x32e <__vector_14+0x6e>
			bpressed = B1H;
 322:	84 e0       	ldi	r24, 0x04	; 4
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	90 93 3f 01 	sts	0x013F, r25
 32a:	80 93 3e 01 	sts	0x013E, r24
		}
	}
	
	if(button2Raw){
 32e:	22 23       	and	r18, r18
 330:	e1 f0       	breq	.+56     	; 0x36a <__vector_14+0xaa>
		count++;
 332:	80 91 40 01 	lds	r24, 0x0140
 336:	90 91 41 01 	lds	r25, 0x0141
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	90 93 41 01 	sts	0x0141, r25
 340:	80 93 40 01 	sts	0x0140, r24
		if(count == 50){
 344:	82 33       	cpi	r24, 0x32	; 50
 346:	91 05       	cpc	r25, r1
 348:	39 f4       	brne	.+14     	; 0x358 <__vector_14+0x98>
			bpressed = B2;
 34a:	82 e0       	ldi	r24, 0x02	; 2
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	90 93 3f 01 	sts	0x013F, r25
 352:	80 93 3e 01 	sts	0x013E, r24
 356:	09 c0       	rjmp	.+18     	; 0x36a <__vector_14+0xaa>
		}
		if(count == 700){
 358:	8c 3b       	cpi	r24, 0xBC	; 188
 35a:	92 40       	sbci	r25, 0x02	; 2
 35c:	31 f4       	brne	.+12     	; 0x36a <__vector_14+0xaa>
			bpressed = B2H;
 35e:	85 e0       	ldi	r24, 0x05	; 5
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	90 93 3f 01 	sts	0x013F, r25
 366:	80 93 3e 01 	sts	0x013E, r24
		}
	}
	
	if(button3Raw){
 36a:	33 23       	and	r19, r19
 36c:	e9 f0       	breq	.+58     	; 0x3a8 <__vector_14+0xe8>
		count++;
 36e:	80 91 40 01 	lds	r24, 0x0140
 372:	90 91 41 01 	lds	r25, 0x0141
 376:	01 96       	adiw	r24, 0x01	; 1
 378:	90 93 41 01 	sts	0x0141, r25
 37c:	80 93 40 01 	sts	0x0140, r24
		if(count == 50){
 380:	82 33       	cpi	r24, 0x32	; 50
 382:	91 05       	cpc	r25, r1
 384:	39 f4       	brne	.+14     	; 0x394 <__vector_14+0xd4>
			bpressed = B3;
 386:	83 e0       	ldi	r24, 0x03	; 3
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	90 93 3f 01 	sts	0x013F, r25
 38e:	80 93 3e 01 	sts	0x013E, r24
 392:	22 c0       	rjmp	.+68     	; 0x3d8 <__vector_14+0x118>
		}
		if(count == 700){
 394:	8c 3b       	cpi	r24, 0xBC	; 188
 396:	92 40       	sbci	r25, 0x02	; 2
 398:	39 f4       	brne	.+14     	; 0x3a8 <__vector_14+0xe8>
			bpressed = B3H;
 39a:	86 e0       	ldi	r24, 0x06	; 6
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	90 93 3f 01 	sts	0x013F, r25
 3a2:	80 93 3e 01 	sts	0x013E, r24
 3a6:	07 c0       	rjmp	.+14     	; 0x3b6 <__vector_14+0xf6>
		}
	}
	if((bpressed > B3) && !button1Raw && !button2Raw && !button3Raw){
 3a8:	80 91 3e 01 	lds	r24, 0x013E
 3ac:	90 91 3f 01 	lds	r25, 0x013F
 3b0:	84 30       	cpi	r24, 0x04	; 4
 3b2:	91 05       	cpc	r25, r1
 3b4:	8c f0       	brlt	.+34     	; 0x3d8 <__vector_14+0x118>
 3b6:	41 11       	cpse	r20, r1
 3b8:	21 c0       	rjmp	.+66     	; 0x3fc <__vector_14+0x13c>
 3ba:	21 11       	cpse	r18, r1
 3bc:	1f c0       	rjmp	.+62     	; 0x3fc <__vector_14+0x13c>
 3be:	31 11       	cpse	r19, r1
 3c0:	1d c0       	rjmp	.+58     	; 0x3fc <__vector_14+0x13c>
		g_button_pressed = bpressed;
 3c2:	80 93 43 01 	sts	0x0143, r24
		bpressed = 0;
 3c6:	10 92 3f 01 	sts	0x013F, r1
 3ca:	10 92 3e 01 	sts	0x013E, r1
		count = 0;
 3ce:	10 92 41 01 	sts	0x0141, r1
 3d2:	10 92 40 01 	sts	0x0140, r1
 3d6:	12 c0       	rjmp	.+36     	; 0x3fc <__vector_14+0x13c>
	}
	
	if(bpressed && !button1Raw && !button2Raw && !button3Raw)
 3d8:	00 97       	sbiw	r24, 0x00	; 0
 3da:	81 f0       	breq	.+32     	; 0x3fc <__vector_14+0x13c>
 3dc:	41 11       	cpse	r20, r1
 3de:	0e c0       	rjmp	.+28     	; 0x3fc <__vector_14+0x13c>
 3e0:	21 11       	cpse	r18, r1
 3e2:	0c c0       	rjmp	.+24     	; 0x3fc <__vector_14+0x13c>
 3e4:	31 11       	cpse	r19, r1
 3e6:	0a c0       	rjmp	.+20     	; 0x3fc <__vector_14+0x13c>
	{
		g_button_pressed = bpressed;
 3e8:	80 93 43 01 	sts	0x0143, r24
		bpressed = 0;
 3ec:	10 92 3f 01 	sts	0x013F, r1
 3f0:	10 92 3e 01 	sts	0x013E, r1
		count = 0;
 3f4:	10 92 41 01 	sts	0x0141, r1
 3f8:	10 92 40 01 	sts	0x0140, r1
	}
	
}
 3fc:	9f 91       	pop	r25
 3fe:	8f 91       	pop	r24
 400:	5f 91       	pop	r21
 402:	4f 91       	pop	r20
 404:	3f 91       	pop	r19
 406:	2f 91       	pop	r18
 408:	0f 90       	pop	r0
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	0f 90       	pop	r0
 40e:	1f 90       	pop	r1
 410:	18 95       	reti

00000412 <eeprom_GetAlarm>:

void eeprom_GetAlarm(void){
	// Read alarm time from EEPROM
	alarmtime.hour = (uint8_t)eeprom_read_byte(&alarm_hour);
 412:	82 e0       	ldi	r24, 0x02	; 2
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 21 07 	call	0xe42	; 0xe42 <__eerd_byte_m328p>
 41a:	80 93 50 01 	sts	0x0150, r24
	alarmtime.minute = (uint8_t)eeprom_read_byte(&alarm_minute);
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 21 07 	call	0xe42	; 0xe42 <__eerd_byte_m328p>
 426:	80 93 51 01 	sts	0x0151, r24
	alarmtime.AM_PM = (uint8_t)eeprom_read_byte(&alarm_AM_PM);
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	0e 94 21 07 	call	0xe42	; 0xe42 <__eerd_byte_m328p>
 432:	80 93 53 01 	sts	0x0153, r24
 436:	08 95       	ret

00000438 <eeprom_SetAlarm>:
}

void eeprom_SetAlarm(void){
	//store alarm time
	eeprom_update_byte(&alarm_hour, alarmtime.hour);
 438:	60 91 50 01 	lds	r22, 0x0150
 43c:	82 e0       	ldi	r24, 0x02	; 2
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 29 07 	call	0xe52	; 0xe52 <__eeupd_byte_m328p>
	eeprom_update_byte(&alarm_minute, alarmtime.minute);
 444:	60 91 51 01 	lds	r22, 0x0151
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 29 07 	call	0xe52	; 0xe52 <__eeupd_byte_m328p>
	eeprom_update_byte(&alarm_AM_PM, alarmtime.AM_PM);
 450:	60 91 53 01 	lds	r22, 0x0153
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 29 07 	call	0xe52	; 0xe52 <__eeupd_byte_m328p>
 45c:	08 95       	ret

0000045e <main>:
}


int main(void)
{
 45e:	cf 93       	push	r28
 460:	df 93       	push	r29
 462:	cd b7       	in	r28, 0x3d	; 61
 464:	de b7       	in	r29, 0x3e	; 62
 466:	63 97       	sbiw	r28, 0x13	; 19
 468:	0f b6       	in	r0, 0x3f	; 63
 46a:	f8 94       	cli
 46c:	de bf       	out	0x3e, r29	; 62
 46e:	0f be       	out	0x3f, r0	; 63
 470:	cd bf       	out	0x3d, r28	; 61
	cli();
 472:	f8 94       	cli
	//initialize I2C, timers and button
	Timer0_Init();
 474:	0e 94 a3 06 	call	0xd46	; 0xd46 <Timer0_Init>
	Timer1_Init();
 478:	0e 94 b7 06 	call	0xd6e	; 0xd6e <Timer1_Init>
	Timer2_Init();
 47c:	0e 94 ae 06 	call	0xd5c	; 0xd5c <Timer2_Init>
	I2C_Init();
 480:	0e 94 f6 03 	call	0x7ec	; 0x7ec <I2C_Init>
	BUTTON_init();
 484:	0e 94 52 01 	call	0x2a4	; 0x2a4 <BUTTON_init>
	LCD_SPI_initialize();
 488:	0e 94 43 04 	call	0x886	; 0x886 <LCD_SPI_initialize>
	LCD_initialize();
 48c:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <LCD_initialize>
	sei();
 490:	78 94       	sei
	
	
	char alarm_onoff[10];
	char on[] = "ON ";
 492:	8f e4       	ldi	r24, 0x4F	; 79
 494:	9e e4       	ldi	r25, 0x4E	; 78
 496:	a0 e2       	ldi	r26, 0x20	; 32
 498:	b0 e0       	ldi	r27, 0x00	; 0
 49a:	8b 87       	std	Y+11, r24	; 0x0b
 49c:	9c 87       	std	Y+12, r25	; 0x0c
 49e:	ad 87       	std	Y+13, r26	; 0x0d
 4a0:	be 87       	std	Y+14, r27	; 0x0e
	char off[] = "OFF";
 4a2:	8f e4       	ldi	r24, 0x4F	; 79
 4a4:	96 e4       	ldi	r25, 0x46	; 70
 4a6:	a6 e4       	ldi	r26, 0x46	; 70
 4a8:	b0 e0       	ldi	r27, 0x00	; 0
 4aa:	8f 87       	std	Y+15, r24	; 0x0f
 4ac:	98 8b       	std	Y+16, r25	; 0x10
 4ae:	a9 8b       	std	Y+17, r26	; 0x11
 4b0:	ba 8b       	std	Y+18, r27	; 0x12
	int timeout;
	uint8_t fresh = 0;
	
	
	strcpy(alarm_onoff,off);
 4b2:	be 01       	movw	r22, r28
 4b4:	61 5f       	subi	r22, 0xF1	; 241
 4b6:	7f 4f       	sbci	r23, 0xFF	; 255
 4b8:	ce 01       	movw	r24, r28
 4ba:	01 96       	adiw	r24, 0x01	; 1
 4bc:	0e 94 1a 07 	call	0xe34	; 0xe34 <strcpy>
	RTC_Set(currenttime);
	*/
	
	
	// Read alarm time from EEPROM
	eeprom_GetAlarm();
 4c0:	0e 94 09 02 	call	0x412	; 0x412 <eeprom_GetAlarm>
	
	char alarm_onoff[10];
	char on[] = "ON ";
	char off[] = "OFF";
	int timeout;
	uint8_t fresh = 0;
 4c4:	1b 8a       	std	Y+19, r1	; 0x13
	{
		
		RTC_Read(&times);
		LCD_print_time_display(times, 21,"SET", "ALARM", alarm_onoff);
		
		if((alarmtime.hour == times.hour) && (alarmtime.minute == times.minute) && (alarmtime.AM_PM == times.AM_PM)
 4c6:	0f 2e       	mov	r0, r31
 4c8:	f0 e5       	ldi	r31, 0x50	; 80
 4ca:	8f 2e       	mov	r8, r31
 4cc:	f1 e0       	ldi	r31, 0x01	; 1
 4ce:	9f 2e       	mov	r9, r31
 4d0:	f0 2d       	mov	r31, r0
 4d2:	0f 2e       	mov	r0, r31
 4d4:	f8 e4       	ldi	r31, 0x48	; 72
 4d6:	6f 2e       	mov	r6, r31
 4d8:	f1 e0       	ldi	r31, 0x01	; 1
 4da:	7f 2e       	mov	r7, r31
 4dc:	f0 2d       	mov	r31, r0
				while(g_button_pressed != B2)
				{
					hw_delay(5);
					if(g_button_pressed == B1)
					{
						alarmtime.minute++;
 4de:	0f 2e       	mov	r0, r31
 4e0:	f1 e5       	ldi	r31, 0x51	; 81
 4e2:	4f 2e       	mov	r4, r31
 4e4:	f1 e0       	ldi	r31, 0x01	; 1
 4e6:	5f 2e       	mov	r5, r31
 4e8:	f0 2d       	mov	r31, r0
				while(g_button_pressed != B2)
				{
					hw_delay(5);
					if(g_button_pressed == B1)
					{
						alarmtime.AM_PM++;
 4ea:	0f 2e       	mov	r0, r31
 4ec:	f3 e5       	ldi	r31, 0x53	; 83
 4ee:	2f 2e       	mov	r2, r31
 4f0:	f1 e0       	ldi	r31, 0x01	; 1
 4f2:	3f 2e       	mov	r3, r31
 4f4:	f0 2d       	mov	r31, r0
	// Read alarm time from EEPROM
	eeprom_GetAlarm();
	while(1)
	{
		
		RTC_Read(&times);
 4f6:	84 e4       	ldi	r24, 0x44	; 68
 4f8:	91 e0       	ldi	r25, 0x01	; 1
 4fa:	0e 94 63 06 	call	0xcc6	; 0xcc6 <RTC_Read>
		LCD_print_time_display(times, 21,"SET", "ALARM", alarm_onoff);
 4fe:	ce 01       	movw	r24, r28
 500:	01 96       	adiw	r24, 0x01	; 1
 502:	5c 01       	movw	r10, r24
 504:	0f 2e       	mov	r0, r31
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	cf 2e       	mov	r12, r31
 50a:	f1 e0       	ldi	r31, 0x01	; 1
 50c:	df 2e       	mov	r13, r31
 50e:	f0 2d       	mov	r31, r0
 510:	0f 2e       	mov	r0, r31
 512:	f6 e0       	ldi	r31, 0x06	; 6
 514:	ef 2e       	mov	r14, r31
 516:	f1 e0       	ldi	r31, 0x01	; 1
 518:	ff 2e       	mov	r15, r31
 51a:	f0 2d       	mov	r31, r0
 51c:	05 e1       	ldi	r16, 0x15	; 21
 51e:	10 e0       	ldi	r17, 0x00	; 0
 520:	20 91 44 01 	lds	r18, 0x0144
 524:	30 91 45 01 	lds	r19, 0x0145
 528:	40 91 46 01 	lds	r20, 0x0146
 52c:	50 91 47 01 	lds	r21, 0x0147
 530:	60 91 48 01 	lds	r22, 0x0148
 534:	70 91 49 01 	lds	r23, 0x0149
 538:	80 91 4a 01 	lds	r24, 0x014A
 53c:	90 91 4b 01 	lds	r25, 0x014B
 540:	0e 94 8f 05 	call	0xb1e	; 0xb1e <LCD_print_time_display>
		
		if((alarmtime.hour == times.hour) && (alarmtime.minute == times.minute) && (alarmtime.AM_PM == times.AM_PM)
 544:	f4 01       	movw	r30, r8
 546:	90 81       	ld	r25, Z
 548:	f3 01       	movw	r30, r6
 54a:	80 81       	ld	r24, Z
 54c:	98 13       	cpse	r25, r24
 54e:	51 c0       	rjmp	.+162    	; 0x5f2 <main+0x194>
 550:	f2 01       	movw	r30, r4
 552:	f0 80       	ld	r15, Z
 554:	e9 e4       	ldi	r30, 0x49	; 73
 556:	f1 e0       	ldi	r31, 0x01	; 1
 558:	80 81       	ld	r24, Z
 55a:	f8 12       	cpse	r15, r24
 55c:	4a c0       	rjmp	.+148    	; 0x5f2 <main+0x194>
 55e:	f1 01       	movw	r30, r2
 560:	90 81       	ld	r25, Z
 562:	80 91 4b 01 	lds	r24, 0x014B
 566:	98 13       	cpse	r25, r24
 568:	44 c0       	rjmp	.+136    	; 0x5f2 <main+0x194>
											 && (g_alarmOnOff) && (fresh != times.minute))
 56a:	80 91 42 01 	lds	r24, 0x0142
 56e:	88 23       	and	r24, r24
 570:	09 f4       	brne	.+2      	; 0x574 <main+0x116>
 572:	3f c0       	rjmp	.+126    	; 0x5f2 <main+0x194>
 574:	fb 89       	ldd	r31, Y+19	; 0x13
 576:	ff 15       	cp	r31, r15
 578:	e1 f1       	breq	.+120    	; 0x5f2 <main+0x194>
		{
			fresh = times.minute;
			Timer1PWM_OnOff(PWM_ON);
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	0e 94 de 06 	call	0xdbc	; 0xdbc <Timer1PWM_OnOff>
			LCD_clear_screen();
 580:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_clear_screen>
			LCD_goto(0,0);
 584:	60 e0       	ldi	r22, 0x00	; 0
 586:	70 e0       	ldi	r23, 0x00	; 0
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
			LCD_print_string("ALARM!");
 590:	8a e0       	ldi	r24, 0x0A	; 10
 592:	91 e0       	ldi	r25, 0x01	; 1
 594:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
			LCD_print_bottom_menu("OFF", " ", " ");
 598:	4e e2       	ldi	r20, 0x2E	; 46
 59a:	51 e0       	ldi	r21, 0x01	; 1
 59c:	ba 01       	movw	r22, r20
 59e:	81 e1       	ldi	r24, 0x11	; 17
 5a0:	91 e0       	ldi	r25, 0x01	; 1
 5a2:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_print_bottom_menu>
			CLEAR_BUTTONS;
 5a6:	10 92 43 01 	sts	0x0143, r1
			timeout = Update_timeout();
 5aa:	0e 94 56 01 	call	0x2ac	; 0x2ac <Update_timeout>
 5ae:	8c 01       	movw	r16, r24
			while(!g_button_pressed && (times.second != timeout)){
 5b0:	ea e4       	ldi	r30, 0x4A	; 74
 5b2:	f1 e0       	ldi	r31, 0x01	; 1
 5b4:	80 81       	ld	r24, Z
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	80 17       	cp	r24, r16
 5ba:	91 07       	cpc	r25, r17
 5bc:	99 f0       	breq	.+38     	; 0x5e4 <main+0x186>
				RTC_Read(&times);
 5be:	84 e4       	ldi	r24, 0x44	; 68
 5c0:	91 e0       	ldi	r25, 0x01	; 1
 5c2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <RTC_Read>
				hw_delay(5);
 5c6:	85 e0       	ldi	r24, 0x05	; 5
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 cb 06 	call	0xd96	; 0xd96 <hw_delay>
			LCD_goto(0,0);
			LCD_print_string("ALARM!");
			LCD_print_bottom_menu("OFF", " ", " ");
			CLEAR_BUTTONS;
			timeout = Update_timeout();
			while(!g_button_pressed && (times.second != timeout)){
 5ce:	80 91 43 01 	lds	r24, 0x0143
 5d2:	81 11       	cpse	r24, r1
 5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <main+0x186>
 5d6:	ea e4       	ldi	r30, 0x4A	; 74
 5d8:	f1 e0       	ldi	r31, 0x01	; 1
 5da:	20 81       	ld	r18, Z
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	20 17       	cp	r18, r16
 5e0:	31 07       	cpc	r19, r17
 5e2:	69 f7       	brne	.-38     	; 0x5be <main+0x160>
				RTC_Read(&times);
				hw_delay(5);
			}
			Timer1PWM_OnOff(PWM_OFF);
 5e4:	80 e0       	ldi	r24, 0x00	; 0
 5e6:	0e 94 de 06 	call	0xdbc	; 0xdbc <Timer1PWM_OnOff>
			CLEAR_BUTTONS;
 5ea:	10 92 43 01 	sts	0x0143, r1
		LCD_print_time_display(times, 21,"SET", "ALARM", alarm_onoff);
		
		if((alarmtime.hour == times.hour) && (alarmtime.minute == times.minute) && (alarmtime.AM_PM == times.AM_PM)
											 && (g_alarmOnOff) && (fresh != times.minute))
		{
			fresh = times.minute;
 5ee:	fb 8a       	std	Y+19, r15	; 0x13
 5f0:	82 cf       	rjmp	.-252    	; 0x4f6 <main+0x98>
			}
			Timer1PWM_OnOff(PWM_OFF);
			CLEAR_BUTTONS;
		}

		switch (g_button_pressed){
 5f2:	80 91 43 01 	lds	r24, 0x0143
 5f6:	82 30       	cpi	r24, 0x02	; 2
 5f8:	61 f0       	breq	.+24     	; 0x612 <main+0x1b4>
 5fa:	83 30       	cpi	r24, 0x03	; 3
 5fc:	09 f4       	brne	.+2      	; 0x600 <main+0x1a2>
 5fe:	dc c0       	rjmp	.+440    	; 0x7b8 <main+0x35a>
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	09 f0       	breq	.+2      	; 0x606 <main+0x1a8>
 604:	78 cf       	rjmp	.-272    	; 0x4f6 <main+0x98>
			case (B1):
				Timer1PWM_OnOff(PWM_OFF);
 606:	80 e0       	ldi	r24, 0x00	; 0
 608:	0e 94 de 06 	call	0xdbc	; 0xdbc <Timer1PWM_OnOff>
				CLEAR_BUTTONS;
 60c:	10 92 43 01 	sts	0x0143, r1
				break;
 610:	72 cf       	rjmp	.-284    	; 0x4f6 <main+0x98>
			case (B2):
				LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
 612:	0f 2e       	mov	r0, r31
 614:	fe e2       	ldi	r31, 0x2E	; 46
 616:	cf 2e       	mov	r12, r31
 618:	f1 e0       	ldi	r31, 0x01	; 1
 61a:	df 2e       	mov	r13, r31
 61c:	f0 2d       	mov	r31, r0
 61e:	0f 2e       	mov	r0, r31
 620:	f5 e1       	ldi	r31, 0x15	; 21
 622:	ef 2e       	mov	r14, r31
 624:	f1 e0       	ldi	r31, 0x01	; 1
 626:	ff 2e       	mov	r15, r31
 628:	f0 2d       	mov	r31, r0
 62a:	0b e1       	ldi	r16, 0x1B	; 27
 62c:	11 e0       	ldi	r17, 0x01	; 1
 62e:	20 91 4c 01 	lds	r18, 0x014C
 632:	30 91 4d 01 	lds	r19, 0x014D
 636:	40 91 4e 01 	lds	r20, 0x014E
 63a:	50 91 4f 01 	lds	r21, 0x014F
 63e:	60 91 50 01 	lds	r22, 0x0150
 642:	70 91 51 01 	lds	r23, 0x0151
 646:	80 91 52 01 	lds	r24, 0x0152
 64a:	90 91 53 01 	lds	r25, 0x0153
 64e:	0e 94 0a 06 	call	0xc14	; 0xc14 <LCD_print_alarm_display>
				CLEAR_BUTTONS;
 652:	10 92 43 01 	sts	0x0143, r1
				while(g_button_pressed != B2)
 656:	33 c0       	rjmp	.+102    	; 0x6be <main+0x260>
				{
					hw_delay(5);
 658:	85 e0       	ldi	r24, 0x05	; 5
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	0e 94 cb 06 	call	0xd96	; 0xd96 <hw_delay>
					if(g_button_pressed == B1)
 660:	80 91 43 01 	lds	r24, 0x0143
 664:	81 30       	cpi	r24, 0x01	; 1
 666:	59 f5       	brne	.+86     	; 0x6be <main+0x260>
					{
						alarmtime.hour++;
 668:	f4 01       	movw	r30, r8
 66a:	80 81       	ld	r24, Z
 66c:	8f 5f       	subi	r24, 0xFF	; 255
						if(alarmtime.hour == 13){
 66e:	8d 30       	cpi	r24, 0x0D	; 13
 670:	11 f0       	breq	.+4      	; 0x676 <main+0x218>
				while(g_button_pressed != B2)
				{
					hw_delay(5);
					if(g_button_pressed == B1)
					{
						alarmtime.hour++;
 672:	80 83       	st	Z, r24
 674:	02 c0       	rjmp	.+4      	; 0x67a <main+0x21c>
						if(alarmtime.hour == 13){
							alarmtime.hour = 0;
 676:	f4 01       	movw	r30, r8
 678:	10 82       	st	Z, r1
						}
						LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
 67a:	0f 2e       	mov	r0, r31
 67c:	fe e2       	ldi	r31, 0x2E	; 46
 67e:	cf 2e       	mov	r12, r31
 680:	f1 e0       	ldi	r31, 0x01	; 1
 682:	df 2e       	mov	r13, r31
 684:	f0 2d       	mov	r31, r0
 686:	0f 2e       	mov	r0, r31
 688:	f5 e1       	ldi	r31, 0x15	; 21
 68a:	ef 2e       	mov	r14, r31
 68c:	f1 e0       	ldi	r31, 0x01	; 1
 68e:	ff 2e       	mov	r15, r31
 690:	f0 2d       	mov	r31, r0
 692:	0b e1       	ldi	r16, 0x1B	; 27
 694:	11 e0       	ldi	r17, 0x01	; 1
 696:	20 91 4c 01 	lds	r18, 0x014C
 69a:	30 91 4d 01 	lds	r19, 0x014D
 69e:	40 91 4e 01 	lds	r20, 0x014E
 6a2:	50 91 4f 01 	lds	r21, 0x014F
 6a6:	60 91 50 01 	lds	r22, 0x0150
 6aa:	70 91 51 01 	lds	r23, 0x0151
 6ae:	80 91 52 01 	lds	r24, 0x0152
 6b2:	90 91 53 01 	lds	r25, 0x0153
 6b6:	0e 94 0a 06 	call	0xc14	; 0xc14 <LCD_print_alarm_display>
						CLEAR_BUTTONS;
 6ba:	10 92 43 01 	sts	0x0143, r1
				CLEAR_BUTTONS;
				break;
			case (B2):
				LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
				CLEAR_BUTTONS;
				while(g_button_pressed != B2)
 6be:	80 91 43 01 	lds	r24, 0x0143
 6c2:	82 30       	cpi	r24, 0x02	; 2
 6c4:	49 f6       	brne	.-110    	; 0x658 <main+0x1fa>
						}
						LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
						CLEAR_BUTTONS;
					}
				}
				CLEAR_BUTTONS;
 6c6:	10 92 43 01 	sts	0x0143, r1
				while(g_button_pressed != B2)
 6ca:	33 c0       	rjmp	.+102    	; 0x732 <main+0x2d4>
				{
					hw_delay(5);
 6cc:	85 e0       	ldi	r24, 0x05	; 5
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 cb 06 	call	0xd96	; 0xd96 <hw_delay>
					if(g_button_pressed == B1)
 6d4:	80 91 43 01 	lds	r24, 0x0143
 6d8:	81 30       	cpi	r24, 0x01	; 1
 6da:	59 f5       	brne	.+86     	; 0x732 <main+0x2d4>
					{
						alarmtime.minute++;
 6dc:	f2 01       	movw	r30, r4
 6de:	80 81       	ld	r24, Z
 6e0:	8f 5f       	subi	r24, 0xFF	; 255
						if(alarmtime.minute == 60){
 6e2:	8c 33       	cpi	r24, 0x3C	; 60
 6e4:	11 f0       	breq	.+4      	; 0x6ea <main+0x28c>
				while(g_button_pressed != B2)
				{
					hw_delay(5);
					if(g_button_pressed == B1)
					{
						alarmtime.minute++;
 6e6:	80 83       	st	Z, r24
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <main+0x290>
						if(alarmtime.minute == 60){
							alarmtime.minute = 0;
 6ea:	f2 01       	movw	r30, r4
 6ec:	10 82       	st	Z, r1
						}
						LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
 6ee:	0f 2e       	mov	r0, r31
 6f0:	fe e2       	ldi	r31, 0x2E	; 46
 6f2:	cf 2e       	mov	r12, r31
 6f4:	f1 e0       	ldi	r31, 0x01	; 1
 6f6:	df 2e       	mov	r13, r31
 6f8:	f0 2d       	mov	r31, r0
 6fa:	0f 2e       	mov	r0, r31
 6fc:	f5 e1       	ldi	r31, 0x15	; 21
 6fe:	ef 2e       	mov	r14, r31
 700:	f1 e0       	ldi	r31, 0x01	; 1
 702:	ff 2e       	mov	r15, r31
 704:	f0 2d       	mov	r31, r0
 706:	0b e1       	ldi	r16, 0x1B	; 27
 708:	11 e0       	ldi	r17, 0x01	; 1
 70a:	20 91 4c 01 	lds	r18, 0x014C
 70e:	30 91 4d 01 	lds	r19, 0x014D
 712:	40 91 4e 01 	lds	r20, 0x014E
 716:	50 91 4f 01 	lds	r21, 0x014F
 71a:	60 91 50 01 	lds	r22, 0x0150
 71e:	70 91 51 01 	lds	r23, 0x0151
 722:	80 91 52 01 	lds	r24, 0x0152
 726:	90 91 53 01 	lds	r25, 0x0153
 72a:	0e 94 0a 06 	call	0xc14	; 0xc14 <LCD_print_alarm_display>
						CLEAR_BUTTONS;
 72e:	10 92 43 01 	sts	0x0143, r1
						LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
						CLEAR_BUTTONS;
					}
				}
				CLEAR_BUTTONS;
				while(g_button_pressed != B2)
 732:	80 91 43 01 	lds	r24, 0x0143
 736:	82 30       	cpi	r24, 0x02	; 2
 738:	49 f6       	brne	.-110    	; 0x6cc <main+0x26e>
						LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
						CLEAR_BUTTONS;
					}
					// Update alarm set time in EEPROM
				}
				CLEAR_BUTTONS;
 73a:	10 92 43 01 	sts	0x0143, r1
				while(g_button_pressed != B2)
 73e:	33 c0       	rjmp	.+102    	; 0x7a6 <main+0x348>
				{
					hw_delay(5);
 740:	85 e0       	ldi	r24, 0x05	; 5
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 cb 06 	call	0xd96	; 0xd96 <hw_delay>
					if(g_button_pressed == B1)
 748:	80 91 43 01 	lds	r24, 0x0143
 74c:	81 30       	cpi	r24, 0x01	; 1
 74e:	59 f5       	brne	.+86     	; 0x7a6 <main+0x348>
					{
						alarmtime.AM_PM++;
 750:	f1 01       	movw	r30, r2
 752:	80 81       	ld	r24, Z
 754:	8f 5f       	subi	r24, 0xFF	; 255
						if(alarmtime.AM_PM >= 2){
 756:	82 30       	cpi	r24, 0x02	; 2
 758:	10 f4       	brcc	.+4      	; 0x75e <main+0x300>
				while(g_button_pressed != B2)
				{
					hw_delay(5);
					if(g_button_pressed == B1)
					{
						alarmtime.AM_PM++;
 75a:	80 83       	st	Z, r24
 75c:	02 c0       	rjmp	.+4      	; 0x762 <main+0x304>
						if(alarmtime.AM_PM >= 2){
							alarmtime.AM_PM = 0;
 75e:	f1 01       	movw	r30, r2
 760:	10 82       	st	Z, r1
						}
						LCD_print_alarm_display(alarmtime,"UP","ENTER"," ");
 762:	0f 2e       	mov	r0, r31
 764:	fe e2       	ldi	r31, 0x2E	; 46
 766:	cf 2e       	mov	r12, r31
 768:	f1 e0       	ldi	r31, 0x01	; 1
 76a:	df 2e       	mov	r13, r31
 76c:	f0 2d       	mov	r31, r0
 76e:	0f 2e       	mov	r0, r31
 770:	f5 e1       	ldi	r31, 0x15	; 21
 772:	ef 2e       	mov	r14, r31
 774:	f1 e0       	ldi	r31, 0x01	; 1
 776:	ff 2e       	mov	r15, r31
 778:	f0 2d       	mov	r31, r0
 77a:	0b e1       	ldi	r16, 0x1B	; 27
 77c:	11 e0       	ldi	r17, 0x01	; 1
 77e:	20 91 4c 01 	lds	r18, 0x014C
 782:	30 91 4d 01 	lds	r19, 0x014D
 786:	40 91 4e 01 	lds	r20, 0x014E
 78a:	50 91 4f 01 	lds	r21, 0x014F
 78e:	60 91 50 01 	lds	r22, 0x0150
 792:	70 91 51 01 	lds	r23, 0x0151
 796:	80 91 52 01 	lds	r24, 0x0152
 79a:	90 91 53 01 	lds	r25, 0x0153
 79e:	0e 94 0a 06 	call	0xc14	; 0xc14 <LCD_print_alarm_display>
						CLEAR_BUTTONS;
 7a2:	10 92 43 01 	sts	0x0143, r1
						CLEAR_BUTTONS;
					}
					// Update alarm set time in EEPROM
				}
				CLEAR_BUTTONS;
				while(g_button_pressed != B2)
 7a6:	80 91 43 01 	lds	r24, 0x0143
 7aa:	82 30       	cpi	r24, 0x02	; 2
 7ac:	49 f6       	brne	.-110    	; 0x740 <main+0x2e2>
						CLEAR_BUTTONS;
					}
					// Update alarm set time in EEPROM
				}
				//store new alarm time in EEPROM
				eeprom_SetAlarm();
 7ae:	0e 94 1c 02 	call	0x438	; 0x438 <eeprom_SetAlarm>
				CLEAR_BUTTONS;
 7b2:	10 92 43 01 	sts	0x0143, r1
				break;
 7b6:	9f ce       	rjmp	.-706    	; 0x4f6 <main+0x98>
			case (B3):
				g_alarmOnOff ^= 0x01;
 7b8:	90 91 42 01 	lds	r25, 0x0142
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	89 27       	eor	r24, r25
 7c0:	80 93 42 01 	sts	0x0142, r24
				if(g_alarmOnOff){
 7c4:	88 23       	and	r24, r24
 7c6:	41 f0       	breq	.+16     	; 0x7d8 <main+0x37a>
					strcpy(alarm_onoff,on);
 7c8:	be 01       	movw	r22, r28
 7ca:	65 5f       	subi	r22, 0xF5	; 245
 7cc:	7f 4f       	sbci	r23, 0xFF	; 255
 7ce:	ce 01       	movw	r24, r28
 7d0:	01 96       	adiw	r24, 0x01	; 1
 7d2:	0e 94 1a 07 	call	0xe34	; 0xe34 <strcpy>
 7d6:	07 c0       	rjmp	.+14     	; 0x7e6 <main+0x388>
				}
				else{
					strcpy(alarm_onoff,off);
 7d8:	be 01       	movw	r22, r28
 7da:	61 5f       	subi	r22, 0xF1	; 241
 7dc:	7f 4f       	sbci	r23, 0xFF	; 255
 7de:	ce 01       	movw	r24, r28
 7e0:	01 96       	adiw	r24, 0x01	; 1
 7e2:	0e 94 1a 07 	call	0xe34	; 0xe34 <strcpy>
				}
				CLEAR_BUTTONS;
 7e6:	10 92 43 01 	sts	0x0143, r1
				break;
 7ea:	85 ce       	rjmp	.-758    	; 0x4f6 <main+0x98>

000007ec <I2C_Init>:
*************************************************/

void I2C_Init(void){
	
	//set PC5 and PC6 as output pins
	DDRC |= _BV(PC5) | _BV(PC6);
 7ec:	87 b1       	in	r24, 0x07	; 7
 7ee:	80 66       	ori	r24, 0x60	; 96
 7f0:	87 b9       	out	0x07, r24	; 7
	
	//Initialize I2C bit rate to 100kHz with pre-scalar of 0
	TWSR = 0;
 7f2:	10 92 b9 00 	sts	0x00B9, r1
	TWBR = ((F_CPU/F_SCL)-16)/2;
 7f6:	88 e4       	ldi	r24, 0x48	; 72
 7f8:	80 93 b8 00 	sts	0x00B8, r24
 7fc:	08 95       	ret

000007fe <I2C_Start>:
Function that sends TWI Start Bit
*************************************************/

void I2C_Start(){
	//send Start condition
	TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);
 7fe:	84 ea       	ldi	r24, 0xA4	; 164
 800:	80 93 bc 00 	sts	0x00BC, r24
	//Wait for TWINT flag
	while(!(TWCR & _BV(TWINT)));
 804:	ec eb       	ldi	r30, 0xBC	; 188
 806:	f0 e0       	ldi	r31, 0x00	; 0
 808:	80 81       	ld	r24, Z
 80a:	88 23       	and	r24, r24
 80c:	ec f7       	brge	.-6      	; 0x808 <I2C_Start+0xa>
}
 80e:	08 95       	ret

00000810 <I2C_Addr>:
Function that takes in and sends slave address and R/W bit
*************************************************/

void I2C_Addr(uint8_t address, uint8_t read_write){
	//Put SLA+R/W byte into TWDR
	TWDR = address << 1 | read_write;
 810:	88 0f       	add	r24, r24
 812:	68 2b       	or	r22, r24
 814:	60 93 bb 00 	sts	0x00BB, r22
	//Send Message
	TWCR = _BV(TWINT) | _BV(TWEN);
 818:	84 e8       	ldi	r24, 0x84	; 132
 81a:	80 93 bc 00 	sts	0x00BC, r24
	//Wait for ack
	while(!(TWCR & _BV(TWINT)));
 81e:	ec eb       	ldi	r30, 0xBC	; 188
 820:	f0 e0       	ldi	r31, 0x00	; 0
 822:	80 81       	ld	r24, Z
 824:	88 23       	and	r24, r24
 826:	ec f7       	brge	.-6      	; 0x822 <I2C_Addr+0x12>
}
 828:	08 95       	ret

0000082a <I2C_Write>:
Function that takes in and sends a data byte to the slave
*************************************************/

void I2C_Write(uint8_t data){
	//put data to be written in TWDR
	TWDR = data;
 82a:	80 93 bb 00 	sts	0x00BB, r24
	//Write data to slave
	TWCR = _BV(TWINT) | _BV(TWEN);
 82e:	84 e8       	ldi	r24, 0x84	; 132
 830:	80 93 bc 00 	sts	0x00BC, r24
	//wait for ack
	while(!(TWCR &_BV(TWINT)));
 834:	ec eb       	ldi	r30, 0xBC	; 188
 836:	f0 e0       	ldi	r31, 0x00	; 0
 838:	80 81       	ld	r24, Z
 83a:	88 23       	and	r24, r24
 83c:	ec f7       	brge	.-6      	; 0x838 <I2C_Write+0xe>
}
 83e:	08 95       	ret

00000840 <I2C_Read>:
sent from the slave
*************************************************/

uint8_t I2C_Read(void){
	//Enable nack
	TWCR = _BV(TWINT) | _BV(TWEN);
 840:	84 e8       	ldi	r24, 0x84	; 132
 842:	80 93 bc 00 	sts	0x00BC, r24
	//wait for TWINT to indicate BYTE received from slave
	while(!(TWCR & _BV(TWINT)));
 846:	ec eb       	ldi	r30, 0xBC	; 188
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	80 81       	ld	r24, Z
 84c:	88 23       	and	r24, r24
 84e:	ec f7       	brge	.-6      	; 0x84a <I2C_Read+0xa>
	//return byte
	return (TWDR);
 850:	80 91 bb 00 	lds	r24, 0x00BB
}
 854:	08 95       	ret

00000856 <I2C_RecieveMessage>:
Function that takes in a device memory address that you want
to read from and reads the data at that address and then
returns the data byte that was read
*************************************************/

uint8_t I2C_RecieveMessage(uint8_t slave_addr, uint8_t device_reg){
 856:	cf 93       	push	r28
 858:	c6 2f       	mov	r28, r22
	//variable to store received data in
	uint8_t read_data;
	//start communication
	I2C_Start();
 85a:	0e 94 ff 03 	call	0x7fe	; 0x7fe <I2C_Start>
	//address slave in write mode
	I2C_Addr(RTC_ADDRESS, WRITE);
 85e:	60 e0       	ldi	r22, 0x00	; 0
 860:	88 e6       	ldi	r24, 0x68	; 104
 862:	0e 94 08 04 	call	0x810	; 0x810 <I2C_Addr>
	//specify device register to read from
	I2C_Write(device_reg);
 866:	8c 2f       	mov	r24, r28
 868:	0e 94 15 04 	call	0x82a	; 0x82a <I2C_Write>
	//start another communication
	I2C_Start();
 86c:	0e 94 ff 03 	call	0x7fe	; 0x7fe <I2C_Start>
	//address slave in read mode
	I2C_Addr(RTC_ADDRESS, READ);
 870:	61 e0       	ldi	r22, 0x01	; 1
 872:	88 e6       	ldi	r24, 0x68	; 104
 874:	0e 94 08 04 	call	0x810	; 0x810 <I2C_Addr>
	//read and store data from slave
	read_data = I2C_Read();
 878:	0e 94 20 04 	call	0x840	; 0x840 <I2C_Read>
Function that Stops I2C communication
*************************************************/

void I2C_Stop(void){
	//Send stop condition
	TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
 87c:	94 e9       	ldi	r25, 0x94	; 148
 87e:	90 93 bc 00 	sts	0x00BC, r25
	read_data = I2C_Read();
	//stop communication
	I2C_Stop();
	//return byte
	return (read_data);
 882:	cf 91       	pop	r28
 884:	08 95       	ret

00000886 <LCD_SPI_initialize>:
 886:	20 9a       	sbi	0x04, 0	; 4
 888:	25 9a       	sbi	0x04, 5	; 4
 88a:	23 9a       	sbi	0x04, 3	; 4
 88c:	54 9a       	sbi	0x0a, 4	; 10
 88e:	22 9a       	sbi	0x04, 2	; 4
 890:	81 e5       	ldi	r24, 0x51	; 81
 892:	8c bd       	out	0x2c, r24	; 44
 894:	08 95       	ret

00000896 <LCD_send_command>:
 896:	2a 98       	cbi	0x05, 2	; 5
 898:	5c 98       	cbi	0x0b, 4	; 11
 89a:	8e bd       	out	0x2e, r24	; 46
 89c:	0d b4       	in	r0, 0x2d	; 45
 89e:	07 fe       	sbrs	r0, 7
 8a0:	fd cf       	rjmp	.-6      	; 0x89c <LCD_send_command+0x6>
 8a2:	8d b5       	in	r24, 0x2d	; 45
 8a4:	8f 77       	andi	r24, 0x7F	; 127
 8a6:	8d bd       	out	0x2d, r24	; 45
 8a8:	2a 9a       	sbi	0x05, 2	; 5
 8aa:	08 95       	ret

000008ac <LCD_send_data>:
 8ac:	2a 98       	cbi	0x05, 2	; 5
 8ae:	5c 9a       	sbi	0x0b, 4	; 11
 8b0:	8e bd       	out	0x2e, r24	; 46
 8b2:	0d b4       	in	r0, 0x2d	; 45
 8b4:	07 fe       	sbrs	r0, 7
 8b6:	fd cf       	rjmp	.-6      	; 0x8b2 <LCD_send_data+0x6>
 8b8:	2a 9a       	sbi	0x05, 2	; 5
 8ba:	08 95       	ret

000008bc <LCD_goto>:
 8bc:	cf 93       	push	r28
 8be:	c6 2f       	mov	r28, r22
 8c0:	80 68       	ori	r24, 0x80	; 128
 8c2:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 8c6:	8c 2f       	mov	r24, r28
 8c8:	80 64       	ori	r24, 0x40	; 64
 8ca:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 8ce:	cf 91       	pop	r28
 8d0:	08 95       	ret

000008d2 <LCD_clear_screen>:
 8d2:	cf 93       	push	r28
 8d4:	df 93       	push	r29
 8d6:	c8 ef       	ldi	r28, 0xF8	; 248
 8d8:	d1 e0       	ldi	r29, 0x01	; 1
 8da:	80 e0       	ldi	r24, 0x00	; 0
 8dc:	0e 94 56 04 	call	0x8ac	; 0x8ac <LCD_send_data>
 8e0:	21 97       	sbiw	r28, 0x01	; 1
 8e2:	20 97       	sbiw	r28, 0x00	; 0
 8e4:	d1 f7       	brne	.-12     	; 0x8da <LCD_clear_screen+0x8>
 8e6:	60 e0       	ldi	r22, 0x00	; 0
 8e8:	70 e0       	ldi	r23, 0x00	; 0
 8ea:	80 e0       	ldi	r24, 0x00	; 0
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
 8f2:	df 91       	pop	r29
 8f4:	cf 91       	pop	r28
 8f6:	08 95       	ret

000008f8 <LCD_initialize>:
 8f8:	2a 98       	cbi	0x05, 2	; 5
 8fa:	28 98       	cbi	0x05, 0	; 5
 8fc:	81 e0       	ldi	r24, 0x01	; 1
 8fe:	90 e0       	ldi	r25, 0x00	; 0
 900:	0e 94 cb 06 	call	0xd96	; 0xd96 <hw_delay>
 904:	28 9a       	sbi	0x05, 0	; 5
 906:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_clear_screen>
 90a:	2a 9a       	sbi	0x05, 2	; 5
 90c:	8c e0       	ldi	r24, 0x0C	; 12
 90e:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 912:	60 e0       	ldi	r22, 0x00	; 0
 914:	70 e0       	ldi	r23, 0x00	; 0
 916:	80 e0       	ldi	r24, 0x00	; 0
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
 91e:	81 e2       	ldi	r24, 0x21	; 33
 920:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 924:	86 e0       	ldi	r24, 0x06	; 6
 926:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 92a:	80 ea       	ldi	r24, 0xA0	; 160
 92c:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 930:	86 e1       	ldi	r24, 0x16	; 22
 932:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 936:	80 e2       	ldi	r24, 0x20	; 32
 938:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_send_command>
 93c:	08 95       	ret

0000093e <LCD_print_char>:
 93e:	0f 93       	push	r16
 940:	1f 93       	push	r17
 942:	cf 93       	push	r28
 944:	df 93       	push	r29
 946:	08 2f       	mov	r16, r24
 948:	10 e0       	ldi	r17, 0x00	; 0
 94a:	00 52       	subi	r16, 0x20	; 32
 94c:	11 09       	sbc	r17, r1
 94e:	c8 01       	movw	r24, r16
 950:	88 0f       	add	r24, r24
 952:	99 1f       	adc	r25, r25
 954:	88 0f       	add	r24, r24
 956:	99 1f       	adc	r25, r25
 958:	08 0f       	add	r16, r24
 95a:	19 1f       	adc	r17, r25
 95c:	c0 e0       	ldi	r28, 0x00	; 0
 95e:	d0 e0       	ldi	r29, 0x00	; 0
 960:	06 56       	subi	r16, 0x66	; 102
 962:	1f 4f       	sbci	r17, 0xFF	; 255
 964:	f8 01       	movw	r30, r16
 966:	ec 0f       	add	r30, r28
 968:	fd 1f       	adc	r31, r29
 96a:	84 91       	lpm	r24, Z
 96c:	0e 94 56 04 	call	0x8ac	; 0x8ac <LCD_send_data>
 970:	21 96       	adiw	r28, 0x01	; 1
 972:	c5 30       	cpi	r28, 0x05	; 5
 974:	d1 05       	cpc	r29, r1
 976:	b1 f7       	brne	.-20     	; 0x964 <LCD_print_char+0x26>
 978:	df 91       	pop	r29
 97a:	cf 91       	pop	r28
 97c:	1f 91       	pop	r17
 97e:	0f 91       	pop	r16
 980:	08 95       	ret

00000982 <LCD_print_double_number>:
 982:	8f 92       	push	r8
 984:	9f 92       	push	r9
 986:	af 92       	push	r10
 988:	bf 92       	push	r11
 98a:	cf 92       	push	r12
 98c:	df 92       	push	r13
 98e:	ef 92       	push	r14
 990:	ff 92       	push	r15
 992:	0f 93       	push	r16
 994:	1f 93       	push	r17
 996:	cf 93       	push	r28
 998:	df 93       	push	r29
 99a:	4c 01       	movw	r8, r24
 99c:	6a e0       	ldi	r22, 0x0A	; 10
 99e:	70 e0       	ldi	r23, 0x00	; 0
 9a0:	0e 94 f2 06 	call	0xde4	; 0xde4 <__divmodhi4>
 9a4:	5b 01       	movw	r10, r22
 9a6:	6b 01       	movw	r12, r22
 9a8:	cc 0c       	add	r12, r12
 9aa:	dd 1c       	adc	r13, r13
 9ac:	cc 0c       	add	r12, r12
 9ae:	dd 1c       	adc	r13, r13
 9b0:	c6 01       	movw	r24, r12
 9b2:	86 0f       	add	r24, r22
 9b4:	97 1f       	adc	r25, r23
 9b6:	c0 e0       	ldi	r28, 0x00	; 0
 9b8:	d0 e0       	ldi	r29, 0x00	; 0
 9ba:	0f 2e       	mov	r0, r31
 9bc:	f8 e6       	ldi	r31, 0x68	; 104
 9be:	ef 2e       	mov	r14, r31
 9c0:	f0 e0       	ldi	r31, 0x00	; 0
 9c2:	ff 2e       	mov	r15, r31
 9c4:	f0 2d       	mov	r31, r0
 9c6:	9c 01       	movw	r18, r24
 9c8:	28 59       	subi	r18, 0x98	; 152
 9ca:	3f 4f       	sbci	r19, 0xFF	; 255
 9cc:	69 01       	movw	r12, r18
 9ce:	87 01       	movw	r16, r14
 9d0:	f6 01       	movw	r30, r12
 9d2:	ec 0f       	add	r30, r28
 9d4:	fd 1f       	adc	r31, r29
 9d6:	84 91       	lpm	r24, Z
 9d8:	0e 94 56 04 	call	0x8ac	; 0x8ac <LCD_send_data>
 9dc:	21 96       	adiw	r28, 0x01	; 1
 9de:	c5 30       	cpi	r28, 0x05	; 5
 9e0:	d1 05       	cpc	r29, r1
 9e2:	a9 f7       	brne	.-22     	; 0x9ce <LCD_print_double_number+0x4c>
 9e4:	26 ef       	ldi	r18, 0xF6	; 246
 9e6:	a5 01       	movw	r20, r10
 9e8:	24 03       	mulsu	r18, r20
 9ea:	c0 01       	movw	r24, r0
 9ec:	25 9f       	mul	r18, r21
 9ee:	90 0d       	add	r25, r0
 9f0:	11 24       	eor	r1, r1
 9f2:	88 0e       	add	r8, r24
 9f4:	99 1e       	adc	r9, r25
 9f6:	c4 01       	movw	r24, r8
 9f8:	88 0f       	add	r24, r24
 9fa:	99 1f       	adc	r25, r25
 9fc:	88 0f       	add	r24, r24
 9fe:	99 1f       	adc	r25, r25
 a00:	88 0e       	add	r8, r24
 a02:	99 1e       	adc	r9, r25
 a04:	c0 e0       	ldi	r28, 0x00	; 0
 a06:	d0 e0       	ldi	r29, 0x00	; 0
 a08:	08 0d       	add	r16, r8
 a0a:	19 1d       	adc	r17, r9
 a0c:	f8 01       	movw	r30, r16
 a0e:	ec 0f       	add	r30, r28
 a10:	fd 1f       	adc	r31, r29
 a12:	84 91       	lpm	r24, Z
 a14:	0e 94 56 04 	call	0x8ac	; 0x8ac <LCD_send_data>
 a18:	21 96       	adiw	r28, 0x01	; 1
 a1a:	c5 30       	cpi	r28, 0x05	; 5
 a1c:	d1 05       	cpc	r29, r1
 a1e:	b1 f7       	brne	.-20     	; 0xa0c <LCD_print_double_number+0x8a>
 a20:	df 91       	pop	r29
 a22:	cf 91       	pop	r28
 a24:	1f 91       	pop	r17
 a26:	0f 91       	pop	r16
 a28:	ff 90       	pop	r15
 a2a:	ef 90       	pop	r14
 a2c:	df 90       	pop	r13
 a2e:	cf 90       	pop	r12
 a30:	bf 90       	pop	r11
 a32:	af 90       	pop	r10
 a34:	9f 90       	pop	r9
 a36:	8f 90       	pop	r8
 a38:	08 95       	ret

00000a3a <LCD_print_string>:
 a3a:	cf 93       	push	r28
 a3c:	df 93       	push	r29
 a3e:	ec 01       	movw	r28, r24
 a40:	88 81       	ld	r24, Y
 a42:	88 23       	and	r24, r24
 a44:	31 f0       	breq	.+12     	; 0xa52 <LCD_print_string+0x18>
 a46:	21 96       	adiw	r28, 0x01	; 1
 a48:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 a4c:	89 91       	ld	r24, Y+
 a4e:	81 11       	cpse	r24, r1
 a50:	fb cf       	rjmp	.-10     	; 0xa48 <LCD_print_string+0xe>
 a52:	df 91       	pop	r29
 a54:	cf 91       	pop	r28
 a56:	08 95       	ret

00000a58 <LCD_print_bottom_menu>:
 a58:	cf 92       	push	r12
 a5a:	df 92       	push	r13
 a5c:	ef 92       	push	r14
 a5e:	ff 92       	push	r15
 a60:	0f 93       	push	r16
 a62:	1f 93       	push	r17
 a64:	cf 93       	push	r28
 a66:	df 93       	push	r29
 a68:	ec 01       	movw	r28, r24
 a6a:	6b 01       	movw	r12, r22
 a6c:	7a 01       	movw	r14, r20
 a6e:	dc 01       	movw	r26, r24
 a70:	0d 90       	ld	r0, X+
 a72:	00 20       	and	r0, r0
 a74:	e9 f7       	brne	.-6      	; 0xa70 <LCD_print_bottom_menu+0x18>
 a76:	11 97       	sbiw	r26, 0x01	; 1
 a78:	cd 01       	movw	r24, r26
 a7a:	8c 1b       	sub	r24, r28
 a7c:	9d 0b       	sbc	r25, r29
 a7e:	db 01       	movw	r26, r22
 a80:	0d 90       	ld	r0, X+
 a82:	00 20       	and	r0, r0
 a84:	e9 f7       	brne	.-6      	; 0xa80 <LCD_print_bottom_menu+0x28>
 a86:	11 97       	sbiw	r26, 0x01	; 1
 a88:	a6 1b       	sub	r26, r22
 a8a:	b7 0b       	sbc	r27, r23
 a8c:	fa 01       	movw	r30, r20
 a8e:	01 90       	ld	r0, Z+
 a90:	00 20       	and	r0, r0
 a92:	e9 f7       	brne	.-6      	; 0xa8e <LCD_print_bottom_menu+0x36>
 a94:	31 97       	sbiw	r30, 0x01	; 1
 a96:	e4 1b       	sub	r30, r20
 a98:	f5 0b       	sbc	r31, r21
 a9a:	a8 0f       	add	r26, r24
 a9c:	b9 1f       	adc	r27, r25
 a9e:	ea 0f       	add	r30, r26
 aa0:	fb 1f       	adc	r31, r27
 aa2:	80 e1       	ldi	r24, 0x10	; 16
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	8e 1b       	sub	r24, r30
 aa8:	9f 0b       	sbc	r25, r31
 aaa:	8c 01       	movw	r16, r24
 aac:	12 f4       	brpl	.+4      	; 0xab2 <LCD_print_bottom_menu+0x5a>
 aae:	0f 5f       	subi	r16, 0xFF	; 255
 ab0:	1f 4f       	sbci	r17, 0xFF	; 255
 ab2:	15 95       	asr	r17
 ab4:	07 95       	ror	r16
 ab6:	65 e0       	ldi	r22, 0x05	; 5
 ab8:	70 e0       	ldi	r23, 0x00	; 0
 aba:	80 e0       	ldi	r24, 0x00	; 0
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
 ac2:	ce 01       	movw	r24, r28
 ac4:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 ac8:	10 16       	cp	r1, r16
 aca:	11 06       	cpc	r1, r17
 acc:	dc f4       	brge	.+54     	; 0xb04 <LCD_print_bottom_menu+0xac>
 ace:	c0 e0       	ldi	r28, 0x00	; 0
 ad0:	d0 e0       	ldi	r29, 0x00	; 0
 ad2:	80 e2       	ldi	r24, 0x20	; 32
 ad4:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 ad8:	21 96       	adiw	r28, 0x01	; 1
 ada:	c0 17       	cp	r28, r16
 adc:	d1 07       	cpc	r29, r17
 ade:	c9 f7       	brne	.-14     	; 0xad2 <LCD_print_bottom_menu+0x7a>
 ae0:	0b c0       	rjmp	.+22     	; 0xaf8 <LCD_print_bottom_menu+0xa0>
 ae2:	80 e2       	ldi	r24, 0x20	; 32
 ae4:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 ae8:	21 96       	adiw	r28, 0x01	; 1
 aea:	c0 17       	cp	r28, r16
 aec:	d1 07       	cpc	r29, r17
 aee:	c9 f7       	brne	.-14     	; 0xae2 <LCD_print_bottom_menu+0x8a>
 af0:	c7 01       	movw	r24, r14
 af2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 af6:	0a c0       	rjmp	.+20     	; 0xb0c <LCD_print_bottom_menu+0xb4>
 af8:	c6 01       	movw	r24, r12
 afa:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 afe:	c0 e0       	ldi	r28, 0x00	; 0
 b00:	d0 e0       	ldi	r29, 0x00	; 0
 b02:	ef cf       	rjmp	.-34     	; 0xae2 <LCD_print_bottom_menu+0x8a>
 b04:	c6 01       	movw	r24, r12
 b06:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 b0a:	f2 cf       	rjmp	.-28     	; 0xaf0 <LCD_print_bottom_menu+0x98>
 b0c:	df 91       	pop	r29
 b0e:	cf 91       	pop	r28
 b10:	1f 91       	pop	r17
 b12:	0f 91       	pop	r16
 b14:	ff 90       	pop	r15
 b16:	ef 90       	pop	r14
 b18:	df 90       	pop	r13
 b1a:	cf 90       	pop	r12
 b1c:	08 95       	ret

00000b1e <LCD_print_time_display>:
 b1e:	af 92       	push	r10
 b20:	bf 92       	push	r11
 b22:	cf 92       	push	r12
 b24:	df 92       	push	r13
 b26:	ef 92       	push	r14
 b28:	ff 92       	push	r15
 b2a:	0f 93       	push	r16
 b2c:	1f 93       	push	r17
 b2e:	cf 93       	push	r28
 b30:	df 93       	push	r29
 b32:	cd b7       	in	r28, 0x3d	; 61
 b34:	de b7       	in	r29, 0x3e	; 62
 b36:	28 97       	sbiw	r28, 0x08	; 8
 b38:	0f b6       	in	r0, 0x3f	; 63
 b3a:	f8 94       	cli
 b3c:	de bf       	out	0x3e, r29	; 62
 b3e:	0f be       	out	0x3f, r0	; 63
 b40:	cd bf       	out	0x3d, r28	; 61
 b42:	29 83       	std	Y+1, r18	; 0x01
 b44:	3a 83       	std	Y+2, r19	; 0x02
 b46:	4b 83       	std	Y+3, r20	; 0x03
 b48:	6d 83       	std	Y+5, r22	; 0x05
 b4a:	7e 83       	std	Y+6, r23	; 0x06
 b4c:	8f 83       	std	Y+7, r24	; 0x07
 b4e:	98 87       	std	Y+8, r25	; 0x08
 b50:	60 e0       	ldi	r22, 0x00	; 0
 b52:	70 e0       	ldi	r23, 0x00	; 0
 b54:	80 e0       	ldi	r24, 0x00	; 0
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
 b5c:	8d 81       	ldd	r24, Y+5	; 0x05
 b5e:	90 e0       	ldi	r25, 0x00	; 0
 b60:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 b64:	8a e3       	ldi	r24, 0x3A	; 58
 b66:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 b6a:	8e 81       	ldd	r24, Y+6	; 0x06
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 b72:	8a e3       	ldi	r24, 0x3A	; 58
 b74:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 b78:	8f 81       	ldd	r24, Y+7	; 0x07
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 b80:	80 e2       	ldi	r24, 0x20	; 32
 b82:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 b86:	88 85       	ldd	r24, Y+8	; 0x08
 b88:	88 23       	and	r24, r24
 b8a:	29 f0       	breq	.+10     	; 0xb96 <LCD_print_time_display+0x78>
 b8c:	80 e3       	ldi	r24, 0x30	; 48
 b8e:	91 e0       	ldi	r25, 0x01	; 1
 b90:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 b94:	04 c0       	rjmp	.+8      	; 0xb9e <LCD_print_time_display+0x80>
 b96:	83 e3       	ldi	r24, 0x33	; 51
 b98:	91 e0       	ldi	r25, 0x01	; 1
 b9a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 b9e:	62 e0       	ldi	r22, 0x02	; 2
 ba0:	70 e0       	ldi	r23, 0x00	; 0
 ba2:	80 e0       	ldi	r24, 0x00	; 0
 ba4:	90 e0       	ldi	r25, 0x00	; 0
 ba6:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
 baa:	8a 81       	ldd	r24, Y+2	; 0x02
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 bb2:	8f e2       	ldi	r24, 0x2F	; 47
 bb4:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 bb8:	8b 81       	ldd	r24, Y+3	; 0x03
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 bc0:	8f e2       	ldi	r24, 0x2F	; 47
 bc2:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 bc6:	89 81       	ldd	r24, Y+1	; 0x01
 bc8:	90 e0       	ldi	r25, 0x00	; 0
 bca:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 bce:	61 e0       	ldi	r22, 0x01	; 1
 bd0:	70 e0       	ldi	r23, 0x00	; 0
 bd2:	80 e4       	ldi	r24, 0x40	; 64
 bd4:	90 e0       	ldi	r25, 0x00	; 0
 bd6:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
 bda:	c8 01       	movw	r24, r16
 bdc:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 be0:	86 e3       	ldi	r24, 0x36	; 54
 be2:	91 e0       	ldi	r25, 0x01	; 1
 be4:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 be8:	a5 01       	movw	r20, r10
 bea:	b6 01       	movw	r22, r12
 bec:	c7 01       	movw	r24, r14
 bee:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_print_bottom_menu>
 bf2:	28 96       	adiw	r28, 0x08	; 8
 bf4:	0f b6       	in	r0, 0x3f	; 63
 bf6:	f8 94       	cli
 bf8:	de bf       	out	0x3e, r29	; 62
 bfa:	0f be       	out	0x3f, r0	; 63
 bfc:	cd bf       	out	0x3d, r28	; 61
 bfe:	df 91       	pop	r29
 c00:	cf 91       	pop	r28
 c02:	1f 91       	pop	r17
 c04:	0f 91       	pop	r16
 c06:	ff 90       	pop	r15
 c08:	ef 90       	pop	r14
 c0a:	df 90       	pop	r13
 c0c:	cf 90       	pop	r12
 c0e:	bf 90       	pop	r11
 c10:	af 90       	pop	r10
 c12:	08 95       	ret

00000c14 <LCD_print_alarm_display>:
 c14:	cf 92       	push	r12
 c16:	df 92       	push	r13
 c18:	ef 92       	push	r14
 c1a:	ff 92       	push	r15
 c1c:	0f 93       	push	r16
 c1e:	1f 93       	push	r17
 c20:	cf 93       	push	r28
 c22:	df 93       	push	r29
 c24:	cd b7       	in	r28, 0x3d	; 61
 c26:	de b7       	in	r29, 0x3e	; 62
 c28:	28 97       	sbiw	r28, 0x08	; 8
 c2a:	0f b6       	in	r0, 0x3f	; 63
 c2c:	f8 94       	cli
 c2e:	de bf       	out	0x3e, r29	; 62
 c30:	0f be       	out	0x3f, r0	; 63
 c32:	cd bf       	out	0x3d, r28	; 61
 c34:	6d 83       	std	Y+5, r22	; 0x05
 c36:	7e 83       	std	Y+6, r23	; 0x06
 c38:	98 87       	std	Y+8, r25	; 0x08
 c3a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <LCD_clear_screen>
 c3e:	60 e0       	ldi	r22, 0x00	; 0
 c40:	70 e0       	ldi	r23, 0x00	; 0
 c42:	80 e0       	ldi	r24, 0x00	; 0
 c44:	90 e0       	ldi	r25, 0x00	; 0
 c46:	0e 94 5e 04 	call	0x8bc	; 0x8bc <LCD_goto>
 c4a:	89 e3       	ldi	r24, 0x39	; 57
 c4c:	91 e0       	ldi	r25, 0x01	; 1
 c4e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 c52:	8d 81       	ldd	r24, Y+5	; 0x05
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 c5a:	8a e3       	ldi	r24, 0x3A	; 58
 c5c:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 c60:	8e 81       	ldd	r24, Y+6	; 0x06
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_print_double_number>
 c68:	80 e2       	ldi	r24, 0x20	; 32
 c6a:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_print_char>
 c6e:	88 85       	ldd	r24, Y+8	; 0x08
 c70:	88 23       	and	r24, r24
 c72:	29 f0       	breq	.+10     	; 0xc7e <LCD_print_alarm_display+0x6a>
 c74:	80 e3       	ldi	r24, 0x30	; 48
 c76:	91 e0       	ldi	r25, 0x01	; 1
 c78:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 c7c:	04 c0       	rjmp	.+8      	; 0xc86 <LCD_print_alarm_display+0x72>
 c7e:	83 e3       	ldi	r24, 0x33	; 51
 c80:	91 e0       	ldi	r25, 0x01	; 1
 c82:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_print_string>
 c86:	a6 01       	movw	r20, r12
 c88:	b7 01       	movw	r22, r14
 c8a:	c8 01       	movw	r24, r16
 c8c:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_print_bottom_menu>
 c90:	28 96       	adiw	r28, 0x08	; 8
 c92:	0f b6       	in	r0, 0x3f	; 63
 c94:	f8 94       	cli
 c96:	de bf       	out	0x3e, r29	; 62
 c98:	0f be       	out	0x3f, r0	; 63
 c9a:	cd bf       	out	0x3d, r28	; 61
 c9c:	df 91       	pop	r29
 c9e:	cf 91       	pop	r28
 ca0:	1f 91       	pop	r17
 ca2:	0f 91       	pop	r16
 ca4:	ff 90       	pop	r15
 ca6:	ef 90       	pop	r14
 ca8:	df 90       	pop	r13
 caa:	cf 90       	pop	r12
 cac:	08 95       	ret

00000cae <fromBCD>:
 cae:	98 2f       	mov	r25, r24
 cb0:	96 95       	lsr	r25
 cb2:	96 95       	lsr	r25
 cb4:	96 95       	lsr	r25
 cb6:	9e 70       	andi	r25, 0x0E	; 14
 cb8:	29 2f       	mov	r18, r25
 cba:	22 0f       	add	r18, r18
 cbc:	22 0f       	add	r18, r18
 cbe:	92 0f       	add	r25, r18
 cc0:	8f 70       	andi	r24, 0x0F	; 15
 cc2:	89 0f       	add	r24, r25
 cc4:	08 95       	ret

00000cc6 <RTC_Read>:
 cc6:	cf 93       	push	r28
 cc8:	df 93       	push	r29
 cca:	ec 01       	movw	r28, r24
 ccc:	66 e0       	ldi	r22, 0x06	; 6
 cce:	88 e6       	ldi	r24, 0x68	; 104
 cd0:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 cd4:	0e 94 57 06 	call	0xcae	; 0xcae <fromBCD>
 cd8:	88 83       	st	Y, r24
 cda:	65 e0       	ldi	r22, 0x05	; 5
 cdc:	88 e6       	ldi	r24, 0x68	; 104
 cde:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 ce2:	0e 94 57 06 	call	0xcae	; 0xcae <fromBCD>
 ce6:	89 83       	std	Y+1, r24	; 0x01
 ce8:	64 e0       	ldi	r22, 0x04	; 4
 cea:	88 e6       	ldi	r24, 0x68	; 104
 cec:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 cf0:	0e 94 57 06 	call	0xcae	; 0xcae <fromBCD>
 cf4:	8a 83       	std	Y+2, r24	; 0x02
 cf6:	63 e0       	ldi	r22, 0x03	; 3
 cf8:	88 e6       	ldi	r24, 0x68	; 104
 cfa:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 cfe:	0e 94 57 06 	call	0xcae	; 0xcae <fromBCD>
 d02:	8b 83       	std	Y+3, r24	; 0x03
 d04:	62 e0       	ldi	r22, 0x02	; 2
 d06:	88 e6       	ldi	r24, 0x68	; 104
 d08:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 d0c:	8f 71       	andi	r24, 0x1F	; 31
 d0e:	0e 94 57 06 	call	0xcae	; 0xcae <fromBCD>
 d12:	8c 83       	std	Y+4, r24	; 0x04
 d14:	61 e0       	ldi	r22, 0x01	; 1
 d16:	88 e6       	ldi	r24, 0x68	; 104
 d18:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 d1c:	0e 94 57 06 	call	0xcae	; 0xcae <fromBCD>
 d20:	8d 83       	std	Y+5, r24	; 0x05
 d22:	60 e0       	ldi	r22, 0x00	; 0
 d24:	88 e6       	ldi	r24, 0x68	; 104
 d26:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 d2a:	0e 94 57 06 	call	0xcae	; 0xcae <fromBCD>
 d2e:	8e 83       	std	Y+6, r24	; 0x06
 d30:	62 e0       	ldi	r22, 0x02	; 2
 d32:	88 e6       	ldi	r24, 0x68	; 104
 d34:	0e 94 2b 04 	call	0x856	; 0x856 <I2C_RecieveMessage>
 d38:	85 fb       	bst	r24, 5
 d3a:	88 27       	eor	r24, r24
 d3c:	80 f9       	bld	r24, 0
 d3e:	8f 83       	std	Y+7, r24	; 0x07
 d40:	df 91       	pop	r29
 d42:	cf 91       	pop	r28
 d44:	08 95       	ret

00000d46 <Timer0_Init>:
 d46:	82 e0       	ldi	r24, 0x02	; 2
 d48:	84 bd       	out	0x24, r24	; 36
 d4a:	93 e0       	ldi	r25, 0x03	; 3
 d4c:	95 bd       	out	0x25, r25	; 37
 d4e:	80 93 6e 00 	sts	0x006E, r24
 d52:	8a ef       	ldi	r24, 0xFA	; 250
 d54:	87 bd       	out	0x27, r24	; 39
 d56:	a9 9a       	sbi	0x15, 1	; 21
 d58:	16 bc       	out	0x26, r1	; 38
 d5a:	08 95       	ret

00000d5c <Timer2_Init>:
 d5c:	82 e0       	ldi	r24, 0x02	; 2
 d5e:	80 93 b0 00 	sts	0x00B0, r24
 d62:	e1 eb       	ldi	r30, 0xB1	; 177
 d64:	f0 e0       	ldi	r31, 0x00	; 0
 d66:	80 81       	ld	r24, Z
 d68:	87 60       	ori	r24, 0x07	; 7
 d6a:	80 83       	st	Z, r24
 d6c:	08 95       	ret

00000d6e <Timer1_Init>:
 d6e:	21 9a       	sbi	0x04, 1	; 4
 d70:	80 e8       	ldi	r24, 0x80	; 128
 d72:	80 93 80 00 	sts	0x0080, r24
 d76:	80 e1       	ldi	r24, 0x10	; 16
 d78:	80 93 81 00 	sts	0x0081, r24
 d7c:	86 e8       	ldi	r24, 0x86	; 134
 d7e:	91 e0       	ldi	r25, 0x01	; 1
 d80:	90 93 87 00 	sts	0x0087, r25
 d84:	80 93 86 00 	sts	0x0086, r24
 d88:	8a e5       	ldi	r24, 0x5A	; 90
 d8a:	90 e0       	ldi	r25, 0x00	; 0
 d8c:	90 93 89 00 	sts	0x0089, r25
 d90:	80 93 88 00 	sts	0x0088, r24
 d94:	08 95       	ret

00000d96 <hw_delay>:
 d96:	2f e0       	ldi	r18, 0x0F	; 15
 d98:	20 93 b3 00 	sts	0x00B3, r18
 d9c:	b9 9a       	sbi	0x17, 1	; 23
 d9e:	10 92 b2 00 	sts	0x00B2, r1
 da2:	00 97       	sbiw	r24, 0x00	; 0
 da4:	51 f0       	breq	.+20     	; 0xdba <hw_delay+0x24>
 da6:	20 e0       	ldi	r18, 0x00	; 0
 da8:	30 e0       	ldi	r19, 0x00	; 0
 daa:	b9 9b       	sbis	0x17, 1	; 23
 dac:	fe cf       	rjmp	.-4      	; 0xdaa <hw_delay+0x14>
 dae:	b9 9a       	sbi	0x17, 1	; 23
 db0:	2f 5f       	subi	r18, 0xFF	; 255
 db2:	3f 4f       	sbci	r19, 0xFF	; 255
 db4:	28 17       	cp	r18, r24
 db6:	39 07       	cpc	r19, r25
 db8:	c1 f7       	brne	.-16     	; 0xdaa <hw_delay+0x14>
 dba:	08 95       	ret

00000dbc <Timer1PWM_OnOff>:
 dbc:	88 23       	and	r24, r24
 dbe:	49 f0       	breq	.+18     	; 0xdd2 <Timer1PWM_OnOff+0x16>
 dc0:	e1 e8       	ldi	r30, 0x81	; 129
 dc2:	f0 e0       	ldi	r31, 0x00	; 0
 dc4:	80 81       	ld	r24, Z
 dc6:	85 60       	ori	r24, 0x05	; 5
 dc8:	80 83       	st	Z, r24
 dca:	80 e8       	ldi	r24, 0x80	; 128
 dcc:	80 93 80 00 	sts	0x0080, r24
 dd0:	08 95       	ret
 dd2:	e1 e8       	ldi	r30, 0x81	; 129
 dd4:	f0 e0       	ldi	r31, 0x00	; 0
 dd6:	80 81       	ld	r24, Z
 dd8:	8a 7f       	andi	r24, 0xFA	; 250
 dda:	80 83       	st	Z, r24
 ddc:	29 98       	cbi	0x05, 1	; 5
 dde:	10 92 80 00 	sts	0x0080, r1
 de2:	08 95       	ret

00000de4 <__divmodhi4>:
 de4:	97 fb       	bst	r25, 7
 de6:	07 2e       	mov	r0, r23
 de8:	16 f4       	brtc	.+4      	; 0xdee <__divmodhi4+0xa>
 dea:	00 94       	com	r0
 dec:	07 d0       	rcall	.+14     	; 0xdfc <__divmodhi4_neg1>
 dee:	77 fd       	sbrc	r23, 7
 df0:	09 d0       	rcall	.+18     	; 0xe04 <__divmodhi4_neg2>
 df2:	0e 94 06 07 	call	0xe0c	; 0xe0c <__udivmodhi4>
 df6:	07 fc       	sbrc	r0, 7
 df8:	05 d0       	rcall	.+10     	; 0xe04 <__divmodhi4_neg2>
 dfa:	3e f4       	brtc	.+14     	; 0xe0a <__divmodhi4_exit>

00000dfc <__divmodhi4_neg1>:
 dfc:	90 95       	com	r25
 dfe:	81 95       	neg	r24
 e00:	9f 4f       	sbci	r25, 0xFF	; 255
 e02:	08 95       	ret

00000e04 <__divmodhi4_neg2>:
 e04:	70 95       	com	r23
 e06:	61 95       	neg	r22
 e08:	7f 4f       	sbci	r23, 0xFF	; 255

00000e0a <__divmodhi4_exit>:
 e0a:	08 95       	ret

00000e0c <__udivmodhi4>:
 e0c:	aa 1b       	sub	r26, r26
 e0e:	bb 1b       	sub	r27, r27
 e10:	51 e1       	ldi	r21, 0x11	; 17
 e12:	07 c0       	rjmp	.+14     	; 0xe22 <__udivmodhi4_ep>

00000e14 <__udivmodhi4_loop>:
 e14:	aa 1f       	adc	r26, r26
 e16:	bb 1f       	adc	r27, r27
 e18:	a6 17       	cp	r26, r22
 e1a:	b7 07       	cpc	r27, r23
 e1c:	10 f0       	brcs	.+4      	; 0xe22 <__udivmodhi4_ep>
 e1e:	a6 1b       	sub	r26, r22
 e20:	b7 0b       	sbc	r27, r23

00000e22 <__udivmodhi4_ep>:
 e22:	88 1f       	adc	r24, r24
 e24:	99 1f       	adc	r25, r25
 e26:	5a 95       	dec	r21
 e28:	a9 f7       	brne	.-22     	; 0xe14 <__udivmodhi4_loop>
 e2a:	80 95       	com	r24
 e2c:	90 95       	com	r25
 e2e:	bc 01       	movw	r22, r24
 e30:	cd 01       	movw	r24, r26
 e32:	08 95       	ret

00000e34 <strcpy>:
 e34:	fb 01       	movw	r30, r22
 e36:	dc 01       	movw	r26, r24
 e38:	01 90       	ld	r0, Z+
 e3a:	0d 92       	st	X+, r0
 e3c:	00 20       	and	r0, r0
 e3e:	e1 f7       	brne	.-8      	; 0xe38 <strcpy+0x4>
 e40:	08 95       	ret

00000e42 <__eerd_byte_m328p>:
 e42:	f9 99       	sbic	0x1f, 1	; 31
 e44:	fe cf       	rjmp	.-4      	; 0xe42 <__eerd_byte_m328p>
 e46:	92 bd       	out	0x22, r25	; 34
 e48:	81 bd       	out	0x21, r24	; 33
 e4a:	f8 9a       	sbi	0x1f, 0	; 31
 e4c:	99 27       	eor	r25, r25
 e4e:	80 b5       	in	r24, 0x20	; 32
 e50:	08 95       	ret

00000e52 <__eeupd_byte_m328p>:
 e52:	26 2f       	mov	r18, r22

00000e54 <__eeupd_r18_m328p>:
 e54:	f9 99       	sbic	0x1f, 1	; 31
 e56:	fe cf       	rjmp	.-4      	; 0xe54 <__eeupd_r18_m328p>
 e58:	92 bd       	out	0x22, r25	; 34
 e5a:	81 bd       	out	0x21, r24	; 33
 e5c:	f8 9a       	sbi	0x1f, 0	; 31
 e5e:	01 97       	sbiw	r24, 0x01	; 1
 e60:	00 b4       	in	r0, 0x20	; 32
 e62:	02 16       	cp	r0, r18
 e64:	39 f0       	breq	.+14     	; 0xe74 <__eeupd_r18_m328p+0x20>
 e66:	1f ba       	out	0x1f, r1	; 31
 e68:	20 bd       	out	0x20, r18	; 32
 e6a:	0f b6       	in	r0, 0x3f	; 63
 e6c:	f8 94       	cli
 e6e:	fa 9a       	sbi	0x1f, 2	; 31
 e70:	f9 9a       	sbi	0x1f, 1	; 31
 e72:	0f be       	out	0x3f, r0	; 63
 e74:	08 95       	ret

00000e76 <_exit>:
 e76:	f8 94       	cli

00000e78 <__stop_program>:
 e78:	ff cf       	rjmp	.-2      	; 0xe78 <__stop_program>
